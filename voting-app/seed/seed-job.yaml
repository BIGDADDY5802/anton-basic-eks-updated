apiVersion: batch/v1
kind: Job
metadata:
  name: voting-seed
spec:
  backoffLimit: 3                    # Retry up to 3 times if pod fails
  activeDeadlineSeconds: 300         # Kill job if it runs longer than 5 minutes
  ttlSecondsAfterFinished: 120       # Auto-delete job 2 minutes after completion
  completions: 1                     # Job succeeds when 1 pod completes successfully
  parallelism: 1                     # Run only 1 pod at a time
  template:
    spec:
      restartPolicy: Never           # Required for Jobs - don't restart failed pods
      containers:
      - name: seed
        image: alpine:latest
        command: ["/bin/sh", "-c"]
        args:
        - |
          # Install required tools
          apk add --no-cache python3 curl apache2-utils
          
          # Download and run the Python script to create data files
          curl -o make-data.py https://raw.githubusercontent.com/dockersamples/example-voting-app/refs/heads/main/seed-data/make-data.py
          python3 make-data.py
          
          # Wait for vote service to be ready
          echo "Waiting for vote service..."
          until curl -f -s $VOTE_SERVICE_URL > /dev/null 2>&1; do
            echo "Vote service not ready, waiting..."
            sleep 2
          done
          
          # Send votes using apache bench
          VOTE_URL=$VOTE_SERVICE_URL
          echo "Sending 1000 votes for option A..."
          ab -n 1000 -c 50 -p posta -T "application/x-www-form-urlencoded" $VOTE_URL/
          
          echo "Sending 1000 votes for option B..."
          ab -n 1000 -c 50 -p postb -T "application/x-www-form-urlencoded" $VOTE_URL/
          
          echo "Sending 1000 more votes for option A..."
          ab -n 1000 -c 50 -p posta -T "application/x-www-form-urlencoded" $VOTE_URL/
          
          echo "Seeding completed!"
        env:
        - name: VOTE_SERVICE_URL
          value: "http://vote"